## Variables
@userNickname = Nickname
@username = user2
@password = AbCd1234
@email = user2@email.com

### 유저 회원 가입
POST http://localhost:8080/api/auth/sign-up
Content-Type: application/json

{
  "userNickname":"{{userNickname}}",
  "username":"{{username}}",
  "userPassword":"{{password}}",
  "userEmail":"{{email}}"
}

### 유저 로그인
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "{{username}}",
  "password": "{{password}}"
}

> {% client.global.set("Access-Token", response.headers.valueOf("Access-Token")); %}

### 리플레시 토큰 테스트 (포스트맨에서는 정상작동)
POST http://localhost:8080/api/auth/token/refresh
Refresh-Token:{{Refresh-Token}}


### 일정 등록
POST http://localhost:8080/api/schedules
Access-Token:{{Access-Token}}
Content-Type: application/json

{
  "scheduleTitle":"일정제목",
  "scheduleContent":"일정내용"
}

### 단일 일정 조회
GET http://localhost:8080/api/schedules/1
Access-Token:{{Access-Token}}


### 전체 일정 조회
GET http://localhost:8080/api/schedules
Access-Token:{{Access-Token}}


### 일정 수정
PUT http://localhost:8080/api/schedules/1
Access-Token:{{Access-Token}}
Content-Type: application/json

{
  "scheduleTitle":"일정 제목 수정",
  "scheduleContent":"일정 내용 수정"
}

### 일정 삭제
DELETE http://localhost:8080/api/schedules/1
Access-Token:{{Access-Token}}

### 댓글 등록
POST http://localhost:8080/api/comments/1
Access-Token:{{Access-Token}}
Content-Type: application/json

{
  "commentContent":"댓글내용"
}

### 댓글 수정
PUT http://localhost:8080/api/comments/1
Access-Token:{{Access-Token}}
Content-Type: application/json

{
  "commentContent":"댓글내용수정"
}

### 댓글 삭제
DELETE http://localhost:8080/api/comments/1
Access-Token:{{Access-Token}}
